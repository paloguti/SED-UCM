   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1955              		.align	2
 1958              	keyboard_base:
 1959 0000 00000006 		.word	100663296
 1960              		.comm	key,4,4
 1961              		.text
 1962              		.align	2
 1963              		.global	keyboard_init
 1965              	keyboard_init:
 1966              	.LFB0:
   1:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   2:../keyboard.c **** #include "44b.h"
   3:../keyboard.c **** #include "44blib.h"
   4:../keyboard.c **** #include "def.h"
   5:../keyboard.c **** /*--- Definición de macros ---*/
   6:../keyboard.c **** #define KEY_VALUE_MASK 0xF
   7:../keyboard.c **** /*--- Variables globales ---*/
   8:../keyboard.c **** volatile UCHAR *keyboard_base = (UCHAR *)0x06000000;
   9:../keyboard.c **** int key;
  10:../keyboard.c **** /*--- Funciones externas ---*/
  11:../keyboard.c **** void D8Led_symbol(int value);
  12:../keyboard.c **** /*--- Declaracion de funciones ---*/
  13:../keyboard.c **** void keyboard_init();
  14:../keyboard.c **** void KeyboardInt(void) __attribute__ ((interrupt ("IRQ")));
  15:../keyboard.c **** /*--- Codigo de las funciones ---*/
  16:../keyboard.c **** void keyboard_init()
  17:../keyboard.c **** {
 1967              		.loc 1 17 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI0:
 1974              		.cfi_def_cfa_register 12
 1975 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 0008 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI1:
 1981              		.cfi_def_cfa 11, 4
  18:../keyboard.c **** 	/* Configurar el puerto G (si no lo estuviese ya) */	
  19:../keyboard.c **** 	// Establece la funcion de los pines (EINT7-EINT0)
  20:../keyboard.c **** 	rPCONG = rPCONG | 0xc;
 1982              		.loc 1 20 0
 1983 000c 80309FE5 		ldr	r3, .L2
 1984 0010 7C209FE5 		ldr	r2, .L2
 1985 0014 002092E5 		ldr	r2, [r2, #0]
 1986 0018 0C2082E3 		orr	r2, r2, #12
 1987 001c 002083E5 		str	r2, [r3, #0]
  21:../keyboard.c **** 	//Habilita las resistencias de pull-up
  22:../keyboard.c **** 	rPUPG = 0x0;
 1988              		.loc 1 22 0
 1989 0020 70309FE5 		ldr	r3, .L2+4
 1990 0024 0020A0E3 		mov	r2, #0
 1991 0028 002083E5 		str	r2, [r3, #0]
  23:../keyboard.c **** 	// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  24:../keyboard.c **** 	rEXTINT = 0x22222222;
 1992              		.loc 1 24 0
 1993 002c 68309FE5 		ldr	r3, .L2+8
 1994 0030 68209FE5 		ldr	r2, .L2+12
 1995 0034 002083E5 		str	r2, [r3, #0]
  25:../keyboard.c **** 
  26:../keyboard.c **** 	/* Establece la rutina de servicio para EINT1 */
  27:../keyboard.c **** 	pISR_EINT1 = (unsigned) KeyboardInt; // Funcion de arriba indicada para interrupciones
 1996              		.loc 1 27 0
 1997 0038 64309FE5 		ldr	r3, .L2+16
 1998 003c 64209FE5 		ldr	r2, .L2+20
 1999 0040 002083E5 		str	r2, [r3, #0]
  28:../keyboard.c **** 
  29:../keyboard.c **** 	/* Configurar controlador de interrupciones */
  30:../keyboard.c **** 	// Borra INTPND escribiendo 1s en I_ISPC
  31:../keyboard.c **** 	//rEXTINTPND = 0xf;
  32:../keyboard.c **** 	rI_ISPC = 0x3ffffff;
 2000              		.loc 1 32 0
 2001 0044 60309FE5 		ldr	r3, .L2+24
 2002 0048 3F23E0E3 		mvn	r2, #-67108864
 2003 004c 002083E5 		str	r2, [r3, #0]
  33:../keyboard.c **** 	// Configura las lineas como de tipo IRQ mediante INTMOD
  34:../keyboard.c **** 	rINTMOD = 0x0;
 2004              		.loc 1 34 0
 2005 0050 58309FE5 		ldr	r3, .L2+28
 2006 0054 0020A0E3 		mov	r2, #0
 2007 0058 002083E5 		str	r2, [r3, #0]
  35:../keyboard.c **** 	// Habilita int. vectorizadas y la linea IRQ (FIQ no) mediante INTCON
  36:../keyboard.c **** 	rINTCON = 0x1;
 2008              		.loc 1 36 0
 2009 005c 1E36A0E3 		mov	r3, #31457280
 2010 0060 0120A0E3 		mov	r2, #1
 2011 0064 002083E5 		str	r2, [r3, #0]
  37:../keyboard.c **** 
  38:../keyboard.c **** 	/* Habilitar linea EINT1 */
  39:../keyboard.c **** 	rINTMSK = rINTMSK & ~(BIT_EINT1 | BIT_GLOBAL);// Enmascarar todas las lineas excepto Eint1 y el bi
 2012              		.loc 1 39 0
 2013 0068 44309FE5 		ldr	r3, .L2+32
 2014 006c 40209FE5 		ldr	r2, .L2+32
 2015 0070 002092E5 		ldr	r2, [r2, #0]
 2016 0074 0524C2E3 		bic	r2, r2, #83886080
 2017 0078 002083E5 		str	r2, [r3, #0]
  40:../keyboard.c **** 
  41:../keyboard.c **** 	/* Por precaucion, se vuelven a borrar los bits de INTPND correspondientes*/
  42:../keyboard.c **** 	rI_ISPC = 0x3ffffff;
 2018              		.loc 1 42 0
 2019 007c 28309FE5 		ldr	r3, .L2+24
 2020 0080 3F23E0E3 		mvn	r2, #-67108864
 2021 0084 002083E5 		str	r2, [r3, #0]
  43:../keyboard.c **** }
 2022              		.loc 1 43 0
 2023 0088 0CD04BE2 		sub	sp, fp, #12
 2024 008c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2025 0090 1EFF2FE1 		bx	lr
 2026              	.L3:
 2027              		.align	2
 2028              	.L2:
 2029 0094 4000D201 		.word	30539840
 2030 0098 4800D201 		.word	30539848
 2031 009c 5000D201 		.word	30539856
 2032 00a0 22222222 		.word	572662306
 2033 00a4 80FF7F0C 		.word	209715072
 2034 00a8 00000000 		.word	KeyboardInt
 2035 00ac 2400E001 		.word	31457316
 2036 00b0 0800E001 		.word	31457288
 2037 00b4 0C00E001 		.word	31457292
 2038              		.cfi_endproc
 2039              	.LFE0:
 2041              		.align	2
 2042              		.global	KeyboardInt
 2044              	KeyboardInt:
 2045              	.LFB1:
  44:../keyboard.c **** void KeyboardInt(void)
  45:../keyboard.c **** {
 2046              		.loc 1 45 0
 2047              		.cfi_startproc
 2048              		@ Interrupt Service Routine.
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 1, uses_anonymous_args = 0
 2051 00b8 04C02DE5 		str	ip, [sp, #-4]!
 2052 00bc 0DC0A0E1 		mov	ip, sp
 2053              	.LCFI2:
 2054              		.cfi_def_cfa_register 12
 2055 00c0 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2056 00c4 04B04CE2 		sub	fp, ip, #4
 2057              		.cfi_offset 14, -8
 2058              		.cfi_offset 13, -12
 2059              		.cfi_offset 11, -16
 2060              		.cfi_offset 3, -20
 2061              		.cfi_offset 2, -24
 2062              		.cfi_offset 1, -28
 2063              		.cfi_offset 0, -32
 2064              	.LCFI3:
 2065              		.cfi_def_cfa 11, 4
  46:../keyboard.c **** 	/* Esperar trp mediante la funcion DelayMs()*/
  47:../keyboard.c **** 	DelayMs(100);
 2066              		.loc 1 47 0
 2067 00c8 6400A0E3 		mov	r0, #100
 2068 00cc FEFFFFEB 		bl	DelayMs
  48:../keyboard.c **** 	/* Identificar la tecla */
  49:../keyboard.c **** 	key = key_read();
 2069              		.loc 1 49 0
 2070 00d0 FEFFFFEB 		bl	key_read
 2071 00d4 0020A0E1 		mov	r2, r0
 2072 00d8 60309FE5 		ldr	r3, .L8
 2073 00dc 002083E5 		str	r2, [r3, #0]
  50:../keyboard.c **** 
  51:../keyboard.c **** 	/* Si la tecla se ha identificado, visualizarla en el 8SEG*/
  52:../keyboard.c **** 	if(key > -1)
 2074              		.loc 1 52 0
 2075 00e0 58309FE5 		ldr	r3, .L8
 2076 00e4 003093E5 		ldr	r3, [r3, #0]
 2077 00e8 000053E3 		cmp	r3, #0
 2078 00ec 040000BA 		blt	.L7
  53:../keyboard.c **** 	{
  54:../keyboard.c **** 		D8Led_symbol(key);
 2079              		.loc 1 54 0
 2080 00f0 48309FE5 		ldr	r3, .L8
 2081 00f4 003093E5 		ldr	r3, [r3, #0]
 2082 00f8 0300A0E1 		mov	r0, r3
 2083 00fc FEFFFFEB 		bl	D8Led_symbol
  55:../keyboard.c **** 	}
  56:../keyboard.c **** 	/* Esperar a se libere la tecla: consultar bit 1 del registro de datos del puerto G */
  57:../keyboard.c **** 	while ((rPDATG & 0x00000002) == 0 ){ // Que está pulsada la tecla
 2084              		.loc 1 57 0
 2085 0100 000000EA 		b	.L6
 2086              	.L7:
 2087 0104 0000A0E1 		mov	r0, r0	@ nop
 2088              	.L6:
 2089              		.loc 1 57 0 is_stmt 0 discriminator 1
 2090 0108 34309FE5 		ldr	r3, .L8+4
 2091 010c 003093E5 		ldr	r3, [r3, #0]
 2092 0110 023003E2 		and	r3, r3, #2
 2093 0114 000053E3 		cmp	r3, #0
 2094 0118 FAFFFF0A 		beq	.L6
  58:../keyboard.c **** 		//NOTHING
  59:../keyboard.c **** 	}
  60:../keyboard.c **** 	/* Esperar trd mediante la funcion Delay() */
  61:../keyboard.c **** 	DelayMs(100);
 2095              		.loc 1 61 0 is_stmt 1
 2096 011c 6400A0E3 		mov	r0, #100
 2097 0120 FEFFFFEB 		bl	DelayMs
  62:../keyboard.c **** 
  63:../keyboard.c **** 	/* Borrar interrupción de teclado */
  64:../keyboard.c **** 	rI_ISPC = BIT_EINT1; // ????
 2098              		.loc 1 64 0
 2099 0124 1C309FE5 		ldr	r3, .L8+8
 2100 0128 0124A0E3 		mov	r2, #16777216
 2101 012c 002083E5 		str	r2, [r3, #0]
  65:../keyboard.c **** }
 2102              		.loc 1 65 0
 2103 0130 1CD04BE2 		sub	sp, fp, #28
 2104 0134 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2105 0138 04C09DE4 		ldmfd	sp!, {ip}
 2106 013c 04F05EE2 		subs	pc, lr, #4
 2107              	.L9:
 2108              		.align	2
 2109              	.L8:
 2110 0140 00000000 		.word	key
 2111 0144 4400D201 		.word	30539844
 2112 0148 2400E001 		.word	31457316
 2113              		.cfi_endproc
 2114              	.LFE1:
 2116              		.align	2
 2117              		.global	key_read
 2119              	key_read:
 2120              	.LFB2:
  66:../keyboard.c **** int key_read()
  67:../keyboard.c **** {
 2121              		.loc 1 67 0
 2122              		.cfi_startproc
 2123              		@ Function supports interworking.
 2124              		@ args = 0, pretend = 0, frame = 8
 2125              		@ frame_needed = 1, uses_anonymous_args = 0
 2126 014c 0DC0A0E1 		mov	ip, sp
 2127              	.LCFI4:
 2128              		.cfi_def_cfa_register 12
 2129 0150 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2130 0154 04B04CE2 		sub	fp, ip, #4
 2131              		.cfi_offset 14, -8
 2132              		.cfi_offset 13, -12
 2133              		.cfi_offset 11, -16
 2134              	.LCFI5:
 2135              		.cfi_def_cfa 11, 4
 2136 0158 08D04DE2 		sub	sp, sp, #8
  68:../keyboard.c **** 	int value= -1;
 2137              		.loc 1 68 0
 2138 015c 0030E0E3 		mvn	r3, #0
 2139 0160 10300BE5 		str	r3, [fp, #-16]
  69:../keyboard.c **** 	char temp;
  70:../keyboard.c **** 	// Identificar la tecla mediante ''scanning''
  71:../keyboard.c **** 	// Si la identificación falla la función debe devolver -1
  72:../keyboard.c **** 	temp = *(keyboard_base + 0xfd) & KEY_VALUE_MASK;
 2140              		.loc 1 72 0
 2141 0164 0C329FE5 		ldr	r3, .L35
 2142 0168 003093E5 		ldr	r3, [r3, #0]
 2143 016c FD3083E2 		add	r3, r3, #253
 2144 0170 0030D3E5 		ldrb	r3, [r3, #0]
 2145 0174 FF3003E2 		and	r3, r3, #255
 2146 0178 0F3003E2 		and	r3, r3, #15
 2147 017c 11304BE5 		strb	r3, [fp, #-17]
  73:../keyboard.c **** 	//Usamos KEY_VALUE_MASK para quedarnos con los 4 bits menos significativos
  74:../keyboard.c **** 
  75:../keyboard.c **** 	switch (temp) {
 2148              		.loc 1 75 0
 2149 0180 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2150 0184 073043E2 		sub	r3, r3, #7
 2151 0188 070053E3 		cmp	r3, #7
 2152 018c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2153 0190 130000EA 		b	.L11
 2154              	.L16:
 2155 0194 B4010000 		.word	.L12
 2156 0198 E4010000 		.word	.L11
 2157 019c E4010000 		.word	.L11
 2158 01a0 E4010000 		.word	.L11
 2159 01a4 C0010000 		.word	.L13
 2160 01a8 E4010000 		.word	.L11
 2161 01ac CC010000 		.word	.L14
 2162 01b0 D8010000 		.word	.L15
 2163              	.L12:
  76:../keyboard.c **** 		case 0x7:  value = 0; break;
 2164              		.loc 1 76 0
 2165 01b4 0030A0E3 		mov	r3, #0
 2166 01b8 10300BE5 		str	r3, [fp, #-16]
 2167 01bc 080000EA 		b	.L11
 2168              	.L13:
  77:../keyboard.c **** 		case 0xB:  value = 1; break;
 2169              		.loc 1 77 0
 2170 01c0 0130A0E3 		mov	r3, #1
 2171 01c4 10300BE5 		str	r3, [fp, #-16]
 2172 01c8 050000EA 		b	.L11
 2173              	.L14:
  78:../keyboard.c **** 		case 0xD:  value = 2; break;
 2174              		.loc 1 78 0
 2175 01cc 0230A0E3 		mov	r3, #2
 2176 01d0 10300BE5 		str	r3, [fp, #-16]
 2177 01d4 020000EA 		b	.L11
 2178              	.L15:
  79:../keyboard.c **** 		case 0xE:  value = 3; break;
 2179              		.loc 1 79 0
 2180 01d8 0330A0E3 		mov	r3, #3
 2181 01dc 10300BE5 		str	r3, [fp, #-16]
 2182 01e0 0000A0E1 		mov	r0, r0	@ nop
 2183              	.L11:
  80:../keyboard.c **** 	}
  81:../keyboard.c **** 
  82:../keyboard.c **** 	temp = *(keyboard_base + 0xfb) & KEY_VALUE_MASK;
 2184              		.loc 1 82 0
 2185 01e4 8C319FE5 		ldr	r3, .L35
 2186 01e8 003093E5 		ldr	r3, [r3, #0]
 2187 01ec FB3083E2 		add	r3, r3, #251
 2188 01f0 0030D3E5 		ldrb	r3, [r3, #0]
 2189 01f4 FF3003E2 		and	r3, r3, #255
 2190 01f8 0F3003E2 		and	r3, r3, #15
 2191 01fc 11304BE5 		strb	r3, [fp, #-17]
  83:../keyboard.c **** 
  84:../keyboard.c **** 
  85:../keyboard.c **** 	switch (temp) {
 2192              		.loc 1 85 0
 2193 0200 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2194 0204 073043E2 		sub	r3, r3, #7
 2195 0208 070053E3 		cmp	r3, #7
 2196 020c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2197 0210 130000EA 		b	.L17
 2198              	.L22:
 2199 0214 34020000 		.word	.L18
 2200 0218 64020000 		.word	.L17
 2201 021c 64020000 		.word	.L17
 2202 0220 64020000 		.word	.L17
 2203 0224 40020000 		.word	.L19
 2204 0228 64020000 		.word	.L17
 2205 022c 4C020000 		.word	.L20
 2206 0230 58020000 		.word	.L21
 2207              	.L18:
  86:../keyboard.c **** 		case 0x7:  value = 4; break;
 2208              		.loc 1 86 0
 2209 0234 0430A0E3 		mov	r3, #4
 2210 0238 10300BE5 		str	r3, [fp, #-16]
 2211 023c 080000EA 		b	.L17
 2212              	.L19:
  87:../keyboard.c **** 		case 0xB:  value = 5; break;
 2213              		.loc 1 87 0
 2214 0240 0530A0E3 		mov	r3, #5
 2215 0244 10300BE5 		str	r3, [fp, #-16]
 2216 0248 050000EA 		b	.L17
 2217              	.L20:
  88:../keyboard.c **** 		case 0xD:  value = 6; break;
 2218              		.loc 1 88 0
 2219 024c 0630A0E3 		mov	r3, #6
 2220 0250 10300BE5 		str	r3, [fp, #-16]
 2221 0254 020000EA 		b	.L17
 2222              	.L21:
  89:../keyboard.c **** 		case 0xE:  value = 7; break;
 2223              		.loc 1 89 0
 2224 0258 0730A0E3 		mov	r3, #7
 2225 025c 10300BE5 		str	r3, [fp, #-16]
 2226 0260 0000A0E1 		mov	r0, r0	@ nop
 2227              	.L17:
  90:../keyboard.c **** 	}
  91:../keyboard.c **** 
  92:../keyboard.c **** 	temp = *(keyboard_base + 0xf7) & KEY_VALUE_MASK;
 2228              		.loc 1 92 0
 2229 0264 0C319FE5 		ldr	r3, .L35
 2230 0268 003093E5 		ldr	r3, [r3, #0]
 2231 026c F73083E2 		add	r3, r3, #247
 2232 0270 0030D3E5 		ldrb	r3, [r3, #0]
 2233 0274 FF3003E2 		and	r3, r3, #255
 2234 0278 0F3003E2 		and	r3, r3, #15
 2235 027c 11304BE5 		strb	r3, [fp, #-17]
  93:../keyboard.c **** 
  94:../keyboard.c **** 
  95:../keyboard.c **** 	switch (temp) {
 2236              		.loc 1 95 0
 2237 0280 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2238 0284 073043E2 		sub	r3, r3, #7
 2239 0288 070053E3 		cmp	r3, #7
 2240 028c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2241 0290 130000EA 		b	.L23
 2242              	.L28:
 2243 0294 B4020000 		.word	.L24
 2244 0298 E4020000 		.word	.L23
 2245 029c E4020000 		.word	.L23
 2246 02a0 E4020000 		.word	.L23
 2247 02a4 C0020000 		.word	.L25
 2248 02a8 E4020000 		.word	.L23
 2249 02ac CC020000 		.word	.L26
 2250 02b0 D8020000 		.word	.L27
 2251              	.L24:
  96:../keyboard.c **** 		case 0x7:  value = 8; break;
 2252              		.loc 1 96 0
 2253 02b4 0830A0E3 		mov	r3, #8
 2254 02b8 10300BE5 		str	r3, [fp, #-16]
 2255 02bc 080000EA 		b	.L23
 2256              	.L25:
  97:../keyboard.c **** 		case 0xB:  value = 9; break;
 2257              		.loc 1 97 0
 2258 02c0 0930A0E3 		mov	r3, #9
 2259 02c4 10300BE5 		str	r3, [fp, #-16]
 2260 02c8 050000EA 		b	.L23
 2261              	.L26:
  98:../keyboard.c **** 		case 0xD:  value = 10; break;
 2262              		.loc 1 98 0
 2263 02cc 0A30A0E3 		mov	r3, #10
 2264 02d0 10300BE5 		str	r3, [fp, #-16]
 2265 02d4 020000EA 		b	.L23
 2266              	.L27:
  99:../keyboard.c **** 		case 0xE:  value = 11; break;
 2267              		.loc 1 99 0
 2268 02d8 0B30A0E3 		mov	r3, #11
 2269 02dc 10300BE5 		str	r3, [fp, #-16]
 2270 02e0 0000A0E1 		mov	r0, r0	@ nop
 2271              	.L23:
 100:../keyboard.c **** 	}
 101:../keyboard.c **** 	
 102:../keyboard.c **** 	temp = *(keyboard_base + 0xef) & KEY_VALUE_MASK;
 2272              		.loc 1 102 0
 2273 02e4 8C309FE5 		ldr	r3, .L35
 2274 02e8 003093E5 		ldr	r3, [r3, #0]
 2275 02ec EF3083E2 		add	r3, r3, #239
 2276 02f0 0030D3E5 		ldrb	r3, [r3, #0]
 2277 02f4 FF3003E2 		and	r3, r3, #255
 2278 02f8 0F3003E2 		and	r3, r3, #15
 2279 02fc 11304BE5 		strb	r3, [fp, #-17]
 103:../keyboard.c **** 	//Usamos KEY_VALUE_MASK para quedarnos con los 4 bits menos significativos
 104:../keyboard.c **** 
 105:../keyboard.c **** 	switch (temp) {
 2280              		.loc 1 105 0
 2281 0300 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2282 0304 073043E2 		sub	r3, r3, #7
 2283 0308 070053E3 		cmp	r3, #7
 2284 030c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2285 0310 130000EA 		b	.L29
 2286              	.L34:
 2287 0314 34030000 		.word	.L30
 2288 0318 64030000 		.word	.L29
 2289 031c 64030000 		.word	.L29
 2290 0320 64030000 		.word	.L29
 2291 0324 40030000 		.word	.L31
 2292 0328 64030000 		.word	.L29
 2293 032c 4C030000 		.word	.L32
 2294 0330 58030000 		.word	.L33
 2295              	.L30:
 106:../keyboard.c **** 		case 0x7:  value = 12; break;
 2296              		.loc 1 106 0
 2297 0334 0C30A0E3 		mov	r3, #12
 2298 0338 10300BE5 		str	r3, [fp, #-16]
 2299 033c 080000EA 		b	.L29
 2300              	.L31:
 107:../keyboard.c **** 		case 0xB:  value = 13; break;
 2301              		.loc 1 107 0
 2302 0340 0D30A0E3 		mov	r3, #13
 2303 0344 10300BE5 		str	r3, [fp, #-16]
 2304 0348 050000EA 		b	.L29
 2305              	.L32:
 108:../keyboard.c **** 		case 0xD:  value = 14; break;
 2306              		.loc 1 108 0
 2307 034c 0E30A0E3 		mov	r3, #14
 2308 0350 10300BE5 		str	r3, [fp, #-16]
 2309 0354 020000EA 		b	.L29
 2310              	.L33:
 109:../keyboard.c **** 		case 0xE:  value = 15; break;
 2311              		.loc 1 109 0
 2312 0358 0F30A0E3 		mov	r3, #15
 2313 035c 10300BE5 		str	r3, [fp, #-16]
 2314 0360 0000A0E1 		mov	r0, r0	@ nop
 2315              	.L29:
 110:../keyboard.c **** 	}
 111:../keyboard.c **** 
 112:../keyboard.c **** 	return value;
 2316              		.loc 1 112 0
 2317 0364 10301BE5 		ldr	r3, [fp, #-16]
 113:../keyboard.c **** 
 114:../keyboard.c **** }
 2318              		.loc 1 114 0
 2319 0368 0300A0E1 		mov	r0, r3
 2320 036c 0CD04BE2 		sub	sp, fp, #12
 2321 0370 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2322 0374 1EFF2FE1 		bx	lr
 2323              	.L36:
 2324              		.align	2
 2325              	.L35:
 2326 0378 00000000 		.word	keyboard_base
 2327              		.cfi_endproc
 2328              	.LFE2:
 2330              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:1958   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:1955   .data:00000000 $d
                            *COM*:00000004 key
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:1962   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:1965   .text:00000000 keyboard_init
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2029   .text:00000094 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2044   .text:000000b8 KeyboardInt
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2041   .text:000000b8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2119   .text:0000014c key_read
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2110   .text:00000140 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2116   .text:0000014c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2155   .text:00000194 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2165   .text:000001b4 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2199   .text:00000214 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2209   .text:00000234 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2243   .text:00000294 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2253   .text:000002b4 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2287   .text:00000314 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2297   .text:00000334 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccEOUu6E.s:2326   .text:00000378 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
D8Led_symbol
