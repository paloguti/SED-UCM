   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keyboard.c"
  21              	.Ltext0:
  22              		.file 1 "../keyboard.c"
 1955              		.align	2
 1958              	keyboard_base:
 1959 0000 00000006 		.word	100663296
 1960              		.comm	key,4,4
 1961              		.text
 1962              		.align	2
 1963              		.global	keyboard_init
 1965              	keyboard_init:
 1966              	.LFB0:
   1:../keyboard.c **** /*--- Ficheros de cabecera ---*/
   2:../keyboard.c **** #include "44b.h"
   3:../keyboard.c **** #include "44blib.h"
   4:../keyboard.c **** #include "def.h"
   5:../keyboard.c **** /*--- Definición de macros ---*/
   6:../keyboard.c **** #define KEY_VALUE_MASK 0xF
   7:../keyboard.c **** /*--- Variables globales ---*/
   8:../keyboard.c **** volatile UCHAR *keyboard_base = (UCHAR *)0x06000000;
   9:../keyboard.c **** int key;
  10:../keyboard.c **** /*--- Funciones externas ---*/
  11:../keyboard.c **** void D8Led_symbol(int value);
  12:../keyboard.c **** /*--- Declaracion de funciones ---*/
  13:../keyboard.c **** void keyboard_init();
  14:../keyboard.c **** void KeyboardInt(void) __attribute__ ((interrupt ("IRQ")));
  15:../keyboard.c **** /*--- Codigo de las funciones ---*/
  16:../keyboard.c **** void keyboard_init()
  17:../keyboard.c **** {
 1967              		.loc 1 17 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI0:
 1974              		.cfi_def_cfa_register 12
 1975 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 0008 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI1:
 1981              		.cfi_def_cfa 11, 4
  18:../keyboard.c **** 	/* Configurar el puerto G (si no lo estuviese ya) */	
  19:../keyboard.c **** 	// Establece la funcion de los pines (EINT7-EINT0)
  20:../keyboard.c **** 	rPCONG = 0xc;
 1982              		.loc 1 20 0
 1983 000c 78309FE5 		ldr	r3, .L2
 1984 0010 0C20A0E3 		mov	r2, #12
 1985 0014 002083E5 		str	r2, [r3, #0]
  21:../keyboard.c **** 	//Habilita las resistencias de pull-up
  22:../keyboard.c **** 	rPUPG = 0x0;
 1986              		.loc 1 22 0
 1987 0018 70309FE5 		ldr	r3, .L2+4
 1988 001c 0020A0E3 		mov	r2, #0
 1989 0020 002083E5 		str	r2, [r3, #0]
  23:../keyboard.c **** 	// Configura las lineas de int. como de flanco de bajada mediante EXTINT
  24:../keyboard.c **** 	rEXTINT = 0x22222222;
 1990              		.loc 1 24 0
 1991 0024 68309FE5 		ldr	r3, .L2+8
 1992 0028 68209FE5 		ldr	r2, .L2+12
 1993 002c 002083E5 		str	r2, [r3, #0]
  25:../keyboard.c **** 
  26:../keyboard.c **** 	/* Establece la rutina de servicio para EINT1 */
  27:../keyboard.c **** 	pISR_EINT1 = (unsigned) KeyboardInt; // Funcion de arriba indicada para interrupciones
 1994              		.loc 1 27 0
 1995 0030 64309FE5 		ldr	r3, .L2+16
 1996 0034 64209FE5 		ldr	r2, .L2+20
 1997 0038 002083E5 		str	r2, [r3, #0]
  28:../keyboard.c **** 
  29:../keyboard.c **** 	/* Configurar controlador de interrupciones */
  30:../keyboard.c **** 	// Borra INTPND escribiendo 1s en I_ISPC
  31:../keyboard.c **** 	//rEXTINTPND = 0xf;
  32:../keyboard.c **** 	rI_ISPC = 0x3ffffff;
 1998              		.loc 1 32 0
 1999 003c 60309FE5 		ldr	r3, .L2+24
 2000 0040 3F23E0E3 		mvn	r2, #-67108864
 2001 0044 002083E5 		str	r2, [r3, #0]
  33:../keyboard.c **** 	// Configura las lineas como de tipo IRQ mediante INTMOD
  34:../keyboard.c **** 	rINTMOD = 0x0;
 2002              		.loc 1 34 0
 2003 0048 58309FE5 		ldr	r3, .L2+28
 2004 004c 0020A0E3 		mov	r2, #0
 2005 0050 002083E5 		str	r2, [r3, #0]
  35:../keyboard.c **** 	// Habilita int. vectorizadas y la linea IRQ (FIQ no) mediante INTCON
  36:../keyboard.c **** 	rINTCON = 0x1;
 2006              		.loc 1 36 0
 2007 0054 1E36A0E3 		mov	r3, #31457280
 2008 0058 0120A0E3 		mov	r2, #1
 2009 005c 002083E5 		str	r2, [r3, #0]
  37:../keyboard.c **** 
  38:../keyboard.c **** 	/* Habilitar linea EINT1 */
  39:../keyboard.c **** 	rINTMSK = rINTMSK & ~(BIT_EINT1 | BIT_GLOBAL);// Enmascarar todas las lineas excepto Eint1 y el bi
 2010              		.loc 1 39 0
 2011 0060 44309FE5 		ldr	r3, .L2+32
 2012 0064 40209FE5 		ldr	r2, .L2+32
 2013 0068 002092E5 		ldr	r2, [r2, #0]
 2014 006c 0524C2E3 		bic	r2, r2, #83886080
 2015 0070 002083E5 		str	r2, [r3, #0]
  40:../keyboard.c **** 
  41:../keyboard.c **** 	/* Por precaucion, se vuelven a borrar los bits de INTPND correspondientes*/
  42:../keyboard.c **** 	rI_ISPC = 0x3ffffff;
 2016              		.loc 1 42 0
 2017 0074 28309FE5 		ldr	r3, .L2+24
 2018 0078 3F23E0E3 		mvn	r2, #-67108864
 2019 007c 002083E5 		str	r2, [r3, #0]
  43:../keyboard.c **** }
 2020              		.loc 1 43 0
 2021 0080 0CD04BE2 		sub	sp, fp, #12
 2022 0084 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2023 0088 1EFF2FE1 		bx	lr
 2024              	.L3:
 2025              		.align	2
 2026              	.L2:
 2027 008c 4000D201 		.word	30539840
 2028 0090 4800D201 		.word	30539848
 2029 0094 5000D201 		.word	30539856
 2030 0098 22222222 		.word	572662306
 2031 009c 80FF7F0C 		.word	209715072
 2032 00a0 00000000 		.word	KeyboardInt
 2033 00a4 2400E001 		.word	31457316
 2034 00a8 0800E001 		.word	31457288
 2035 00ac 0C00E001 		.word	31457292
 2036              		.cfi_endproc
 2037              	.LFE0:
 2039              		.align	2
 2040              		.global	KeyboardInt
 2042              	KeyboardInt:
 2043              	.LFB1:
  44:../keyboard.c **** void KeyboardInt(void)
  45:../keyboard.c **** {
 2044              		.loc 1 45 0
 2045              		.cfi_startproc
 2046              		@ Interrupt Service Routine.
 2047              		@ args = 0, pretend = 0, frame = 0
 2048              		@ frame_needed = 1, uses_anonymous_args = 0
 2049 00b0 04C02DE5 		str	ip, [sp, #-4]!
 2050 00b4 0DC0A0E1 		mov	ip, sp
 2051              	.LCFI2:
 2052              		.cfi_def_cfa_register 12
 2053 00b8 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2054 00bc 04B04CE2 		sub	fp, ip, #4
 2055              		.cfi_offset 14, -8
 2056              		.cfi_offset 13, -12
 2057              		.cfi_offset 11, -16
 2058              		.cfi_offset 3, -20
 2059              		.cfi_offset 2, -24
 2060              		.cfi_offset 1, -28
 2061              		.cfi_offset 0, -32
 2062              	.LCFI3:
 2063              		.cfi_def_cfa 11, 4
  46:../keyboard.c **** 	/* Esperar trp mediante la funcion DelayMs()*/
  47:../keyboard.c **** 	DelayMs(100);
 2064              		.loc 1 47 0
 2065 00c0 6400A0E3 		mov	r0, #100
 2066 00c4 FEFFFFEB 		bl	DelayMs
  48:../keyboard.c **** 	/* Identificar la tecla */
  49:../keyboard.c **** 	key = key_read();
 2067              		.loc 1 49 0
 2068 00c8 FEFFFFEB 		bl	key_read
 2069 00cc 0020A0E1 		mov	r2, r0
 2070 00d0 60309FE5 		ldr	r3, .L8
 2071 00d4 002083E5 		str	r2, [r3, #0]
  50:../keyboard.c **** 
  51:../keyboard.c **** 	/* Si la tecla se ha identificado, visualizarla en el 8SEG*/
  52:../keyboard.c **** 	if(key > -1)
 2072              		.loc 1 52 0
 2073 00d8 58309FE5 		ldr	r3, .L8
 2074 00dc 003093E5 		ldr	r3, [r3, #0]
 2075 00e0 000053E3 		cmp	r3, #0
 2076 00e4 040000BA 		blt	.L7
  53:../keyboard.c **** 	{
  54:../keyboard.c **** 		D8Led_symbol(key);
 2077              		.loc 1 54 0
 2078 00e8 48309FE5 		ldr	r3, .L8
 2079 00ec 003093E5 		ldr	r3, [r3, #0]
 2080 00f0 0300A0E1 		mov	r0, r3
 2081 00f4 FEFFFFEB 		bl	D8Led_symbol
  55:../keyboard.c **** 	}
  56:../keyboard.c **** 	/* Esperar a se libere la tecla: consultar bit 1 del registro de datos del puerto G */
  57:../keyboard.c **** 	while ((rPDATG & 0x00000001) == 0 ){ // Que está pulsada la tecla
 2082              		.loc 1 57 0
 2083 00f8 000000EA 		b	.L6
 2084              	.L7:
 2085 00fc 0000A0E1 		mov	r0, r0	@ nop
 2086              	.L6:
 2087              		.loc 1 57 0 is_stmt 0 discriminator 1
 2088 0100 34309FE5 		ldr	r3, .L8+4
 2089 0104 003093E5 		ldr	r3, [r3, #0]
 2090 0108 013003E2 		and	r3, r3, #1
 2091 010c 000053E3 		cmp	r3, #0
 2092 0110 FAFFFF0A 		beq	.L6
  58:../keyboard.c **** 		//NOTHING
  59:../keyboard.c **** 	}
  60:../keyboard.c **** 	/* Esperar trd mediante la funcion Delay() */
  61:../keyboard.c **** 	DelayMs(100);
 2093              		.loc 1 61 0 is_stmt 1
 2094 0114 6400A0E3 		mov	r0, #100
 2095 0118 FEFFFFEB 		bl	DelayMs
  62:../keyboard.c **** 
  63:../keyboard.c **** 	/* Borrar interrupción de teclado */
  64:../keyboard.c **** 	rI_ISPC = BIT_EINT1; // ????
 2096              		.loc 1 64 0
 2097 011c 1C309FE5 		ldr	r3, .L8+8
 2098 0120 0124A0E3 		mov	r2, #16777216
 2099 0124 002083E5 		str	r2, [r3, #0]
  65:../keyboard.c **** }
 2100              		.loc 1 65 0
 2101 0128 1CD04BE2 		sub	sp, fp, #28
 2102 012c 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2103 0130 04C09DE4 		ldmfd	sp!, {ip}
 2104 0134 04F05EE2 		subs	pc, lr, #4
 2105              	.L9:
 2106              		.align	2
 2107              	.L8:
 2108 0138 00000000 		.word	key
 2109 013c 4400D201 		.word	30539844
 2110 0140 2400E001 		.word	31457316
 2111              		.cfi_endproc
 2112              	.LFE1:
 2114              		.align	2
 2115              		.global	key_read
 2117              	key_read:
 2118              	.LFB2:
  66:../keyboard.c **** int key_read()
  67:../keyboard.c **** {
 2119              		.loc 1 67 0
 2120              		.cfi_startproc
 2121              		@ Function supports interworking.
 2122              		@ args = 0, pretend = 0, frame = 8
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124 0144 0DC0A0E1 		mov	ip, sp
 2125              	.LCFI4:
 2126              		.cfi_def_cfa_register 12
 2127 0148 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2128 014c 04B04CE2 		sub	fp, ip, #4
 2129              		.cfi_offset 14, -8
 2130              		.cfi_offset 13, -12
 2131              		.cfi_offset 11, -16
 2132              	.LCFI5:
 2133              		.cfi_def_cfa 11, 4
 2134 0150 08D04DE2 		sub	sp, sp, #8
  68:../keyboard.c **** 	int value= -1;
 2135              		.loc 1 68 0
 2136 0154 0030E0E3 		mvn	r3, #0
 2137 0158 10300BE5 		str	r3, [fp, #-16]
  69:../keyboard.c **** 	char temp;
  70:../keyboard.c **** 	// Identificar la tecla mediante ''scanning''
  71:../keyboard.c **** 	// Si la identificación falla la función debe devolver -1
  72:../keyboard.c **** 	temp = *(keyboard_base + 0xfd) & KEY_VALUE_MASK;
 2138              		.loc 1 72 0
 2139 015c 0C329FE5 		ldr	r3, .L35
 2140 0160 003093E5 		ldr	r3, [r3, #0]
 2141 0164 FD3083E2 		add	r3, r3, #253
 2142 0168 0030D3E5 		ldrb	r3, [r3, #0]
 2143 016c FF3003E2 		and	r3, r3, #255
 2144 0170 0F3003E2 		and	r3, r3, #15
 2145 0174 11304BE5 		strb	r3, [fp, #-17]
  73:../keyboard.c **** 	//Usamos KEY_VALUE_MASK para quedarnos con los 4 bits menos significativos
  74:../keyboard.c **** 
  75:../keyboard.c **** 	switch (temp) {
 2146              		.loc 1 75 0
 2147 0178 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2148 017c 073043E2 		sub	r3, r3, #7
 2149 0180 070053E3 		cmp	r3, #7
 2150 0184 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2151 0188 130000EA 		b	.L11
 2152              	.L16:
 2153 018c AC010000 		.word	.L12
 2154 0190 DC010000 		.word	.L11
 2155 0194 DC010000 		.word	.L11
 2156 0198 DC010000 		.word	.L11
 2157 019c B8010000 		.word	.L13
 2158 01a0 DC010000 		.word	.L11
 2159 01a4 C4010000 		.word	.L14
 2160 01a8 D0010000 		.word	.L15
 2161              	.L12:
  76:../keyboard.c **** 		case 0x7:  value = 0; break;
 2162              		.loc 1 76 0
 2163 01ac 0030A0E3 		mov	r3, #0
 2164 01b0 10300BE5 		str	r3, [fp, #-16]
 2165 01b4 080000EA 		b	.L11
 2166              	.L13:
  77:../keyboard.c **** 		case 0xB:  value = 1; break;
 2167              		.loc 1 77 0
 2168 01b8 0130A0E3 		mov	r3, #1
 2169 01bc 10300BE5 		str	r3, [fp, #-16]
 2170 01c0 050000EA 		b	.L11
 2171              	.L14:
  78:../keyboard.c **** 		case 0xD:  value = 2; break;
 2172              		.loc 1 78 0
 2173 01c4 0230A0E3 		mov	r3, #2
 2174 01c8 10300BE5 		str	r3, [fp, #-16]
 2175 01cc 020000EA 		b	.L11
 2176              	.L15:
  79:../keyboard.c **** 		case 0xE:  value = 3; break;
 2177              		.loc 1 79 0
 2178 01d0 0330A0E3 		mov	r3, #3
 2179 01d4 10300BE5 		str	r3, [fp, #-16]
 2180 01d8 0000A0E1 		mov	r0, r0	@ nop
 2181              	.L11:
  80:../keyboard.c **** 	}
  81:../keyboard.c **** 
  82:../keyboard.c **** 	temp = *(keyboard_base + 0xfb) & KEY_VALUE_MASK;
 2182              		.loc 1 82 0
 2183 01dc 8C319FE5 		ldr	r3, .L35
 2184 01e0 003093E5 		ldr	r3, [r3, #0]
 2185 01e4 FB3083E2 		add	r3, r3, #251
 2186 01e8 0030D3E5 		ldrb	r3, [r3, #0]
 2187 01ec FF3003E2 		and	r3, r3, #255
 2188 01f0 0F3003E2 		and	r3, r3, #15
 2189 01f4 11304BE5 		strb	r3, [fp, #-17]
  83:../keyboard.c **** 
  84:../keyboard.c **** 
  85:../keyboard.c **** 	switch (temp) {
 2190              		.loc 1 85 0
 2191 01f8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2192 01fc 073043E2 		sub	r3, r3, #7
 2193 0200 070053E3 		cmp	r3, #7
 2194 0204 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2195 0208 130000EA 		b	.L17
 2196              	.L22:
 2197 020c 2C020000 		.word	.L18
 2198 0210 5C020000 		.word	.L17
 2199 0214 5C020000 		.word	.L17
 2200 0218 5C020000 		.word	.L17
 2201 021c 38020000 		.word	.L19
 2202 0220 5C020000 		.word	.L17
 2203 0224 44020000 		.word	.L20
 2204 0228 50020000 		.word	.L21
 2205              	.L18:
  86:../keyboard.c **** 		case 0x7:  value = 4; break;
 2206              		.loc 1 86 0
 2207 022c 0430A0E3 		mov	r3, #4
 2208 0230 10300BE5 		str	r3, [fp, #-16]
 2209 0234 080000EA 		b	.L17
 2210              	.L19:
  87:../keyboard.c **** 		case 0xB:  value = 5; break;
 2211              		.loc 1 87 0
 2212 0238 0530A0E3 		mov	r3, #5
 2213 023c 10300BE5 		str	r3, [fp, #-16]
 2214 0240 050000EA 		b	.L17
 2215              	.L20:
  88:../keyboard.c **** 		case 0xD:  value = 6; break;
 2216              		.loc 1 88 0
 2217 0244 0630A0E3 		mov	r3, #6
 2218 0248 10300BE5 		str	r3, [fp, #-16]
 2219 024c 020000EA 		b	.L17
 2220              	.L21:
  89:../keyboard.c **** 		case 0xE:  value = 7; break;
 2221              		.loc 1 89 0
 2222 0250 0730A0E3 		mov	r3, #7
 2223 0254 10300BE5 		str	r3, [fp, #-16]
 2224 0258 0000A0E1 		mov	r0, r0	@ nop
 2225              	.L17:
  90:../keyboard.c **** 	}
  91:../keyboard.c **** 
  92:../keyboard.c **** 	temp = *(keyboard_base + 0xf7) & KEY_VALUE_MASK;
 2226              		.loc 1 92 0
 2227 025c 0C319FE5 		ldr	r3, .L35
 2228 0260 003093E5 		ldr	r3, [r3, #0]
 2229 0264 F73083E2 		add	r3, r3, #247
 2230 0268 0030D3E5 		ldrb	r3, [r3, #0]
 2231 026c FF3003E2 		and	r3, r3, #255
 2232 0270 0F3003E2 		and	r3, r3, #15
 2233 0274 11304BE5 		strb	r3, [fp, #-17]
  93:../keyboard.c **** 
  94:../keyboard.c **** 
  95:../keyboard.c **** 	switch (temp) {
 2234              		.loc 1 95 0
 2235 0278 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2236 027c 073043E2 		sub	r3, r3, #7
 2237 0280 070053E3 		cmp	r3, #7
 2238 0284 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2239 0288 130000EA 		b	.L23
 2240              	.L28:
 2241 028c AC020000 		.word	.L24
 2242 0290 DC020000 		.word	.L23
 2243 0294 DC020000 		.word	.L23
 2244 0298 DC020000 		.word	.L23
 2245 029c B8020000 		.word	.L25
 2246 02a0 DC020000 		.word	.L23
 2247 02a4 C4020000 		.word	.L26
 2248 02a8 D0020000 		.word	.L27
 2249              	.L24:
  96:../keyboard.c **** 		case 0x7:  value = 8; break;
 2250              		.loc 1 96 0
 2251 02ac 0830A0E3 		mov	r3, #8
 2252 02b0 10300BE5 		str	r3, [fp, #-16]
 2253 02b4 080000EA 		b	.L23
 2254              	.L25:
  97:../keyboard.c **** 		case 0xB:  value = 9; break;
 2255              		.loc 1 97 0
 2256 02b8 0930A0E3 		mov	r3, #9
 2257 02bc 10300BE5 		str	r3, [fp, #-16]
 2258 02c0 050000EA 		b	.L23
 2259              	.L26:
  98:../keyboard.c **** 		case 0xD:  value = 10; break;
 2260              		.loc 1 98 0
 2261 02c4 0A30A0E3 		mov	r3, #10
 2262 02c8 10300BE5 		str	r3, [fp, #-16]
 2263 02cc 020000EA 		b	.L23
 2264              	.L27:
  99:../keyboard.c **** 		case 0xE:  value = 11; break;
 2265              		.loc 1 99 0
 2266 02d0 0B30A0E3 		mov	r3, #11
 2267 02d4 10300BE5 		str	r3, [fp, #-16]
 2268 02d8 0000A0E1 		mov	r0, r0	@ nop
 2269              	.L23:
 100:../keyboard.c **** 	}
 101:../keyboard.c **** 	
 102:../keyboard.c **** 	temp = *(keyboard_base + 0xef) & KEY_VALUE_MASK;
 2270              		.loc 1 102 0
 2271 02dc 8C309FE5 		ldr	r3, .L35
 2272 02e0 003093E5 		ldr	r3, [r3, #0]
 2273 02e4 EF3083E2 		add	r3, r3, #239
 2274 02e8 0030D3E5 		ldrb	r3, [r3, #0]
 2275 02ec FF3003E2 		and	r3, r3, #255
 2276 02f0 0F3003E2 		and	r3, r3, #15
 2277 02f4 11304BE5 		strb	r3, [fp, #-17]
 103:../keyboard.c **** 	//Usamos KEY_VALUE_MASK para quedarnos con los 4 bits menos significativos
 104:../keyboard.c **** 
 105:../keyboard.c **** 	switch (temp) {
 2278              		.loc 1 105 0
 2279 02f8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2280 02fc 073043E2 		sub	r3, r3, #7
 2281 0300 070053E3 		cmp	r3, #7
 2282 0304 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2283 0308 130000EA 		b	.L29
 2284              	.L34:
 2285 030c 2C030000 		.word	.L30
 2286 0310 5C030000 		.word	.L29
 2287 0314 5C030000 		.word	.L29
 2288 0318 5C030000 		.word	.L29
 2289 031c 38030000 		.word	.L31
 2290 0320 5C030000 		.word	.L29
 2291 0324 44030000 		.word	.L32
 2292 0328 50030000 		.word	.L33
 2293              	.L30:
 106:../keyboard.c **** 		case 0x7:  value = 12; break;
 2294              		.loc 1 106 0
 2295 032c 0C30A0E3 		mov	r3, #12
 2296 0330 10300BE5 		str	r3, [fp, #-16]
 2297 0334 080000EA 		b	.L29
 2298              	.L31:
 107:../keyboard.c **** 		case 0xB:  value = 13; break;
 2299              		.loc 1 107 0
 2300 0338 0D30A0E3 		mov	r3, #13
 2301 033c 10300BE5 		str	r3, [fp, #-16]
 2302 0340 050000EA 		b	.L29
 2303              	.L32:
 108:../keyboard.c **** 		case 0xD:  value = 14; break;
 2304              		.loc 1 108 0
 2305 0344 0E30A0E3 		mov	r3, #14
 2306 0348 10300BE5 		str	r3, [fp, #-16]
 2307 034c 020000EA 		b	.L29
 2308              	.L33:
 109:../keyboard.c **** 		case 0xE:  value = 15; break;
 2309              		.loc 1 109 0
 2310 0350 0F30A0E3 		mov	r3, #15
 2311 0354 10300BE5 		str	r3, [fp, #-16]
 2312 0358 0000A0E1 		mov	r0, r0	@ nop
 2313              	.L29:
 110:../keyboard.c **** 	}
 111:../keyboard.c **** 
 112:../keyboard.c **** 	return value;
 2314              		.loc 1 112 0
 2315 035c 10301BE5 		ldr	r3, [fp, #-16]
 113:../keyboard.c **** 
 114:../keyboard.c **** }
 2316              		.loc 1 114 0
 2317 0360 0300A0E1 		mov	r0, r3
 2318 0364 0CD04BE2 		sub	sp, fp, #12
 2319 0368 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2320 036c 1EFF2FE1 		bx	lr
 2321              	.L36:
 2322              		.align	2
 2323              	.L35:
 2324 0370 00000000 		.word	keyboard_base
 2325              		.cfi_endproc
 2326              	.LFE2:
 2328              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:1958   .data:00000000 keyboard_base
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:1955   .data:00000000 $d
                            *COM*:00000004 key
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:1962   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:1965   .text:00000000 keyboard_init
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2027   .text:0000008c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2042   .text:000000b0 KeyboardInt
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2039   .text:000000b0 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2117   .text:00000144 key_read
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2108   .text:00000138 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2114   .text:00000144 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2153   .text:0000018c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2163   .text:000001ac $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2197   .text:0000020c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2207   .text:0000022c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2241   .text:0000028c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2251   .text:000002ac $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2285   .text:0000030c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2295   .text:0000032c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccK85j6f.s:2324   .text:00000370 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DelayMs
D8Led_symbol
